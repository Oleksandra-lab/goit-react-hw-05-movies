{"version":3,"file":"static/js/6.4c2db8dc.chunk.js","mappings":"sOAyCA,UAnCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGSK,EAAAA,EAAAA,MAHT,OAGVC,EAHU,OAIhBR,EAAUQ,GAJM,gDAMhBJ,EAAS,KAAMK,SANC,yBAQhBP,GAAa,GARG,4EAAH,qDAWjBI,GACD,GAAE,KAGD,2BACGL,IAAa,SAAC,IAAD,IACbE,IAAS,SAAC,IAAD,CAAUM,QAASN,KAC7B,wBAAI,mBACQ,OAAXJ,GACCA,EAAOW,KAAI,SAAAC,GAAK,OACd,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACE,wBAAKF,EAAMG,SADyBH,EAAME,GAD9B,MAOvB,C,uKCrCDE,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAS,mCAEFT,EAAe,mCAAG,sGACNQ,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,uBACrBC,EADqB,EACrBA,KACRC,QAAQC,IAAIF,EAAKG,SAFY,kBAGtBH,EAAKG,SAHiB,2CAAH,qDAMfC,EAAgB,mCAAG,WAAMC,GAAN,yFACPP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACoBM,IAFb,uBACtBL,EADsB,EACtBA,KADsB,kBAIvBA,EAAKG,SAJkB,2CAAH,sDAOhBG,EAAe,mCAAG,WAAMC,GAAN,yFACNT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,IADhC,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfQ,EAAY,mCAAG,WAAMD,GAAN,yFACHT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFZ,uBAClBC,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,qD,0CChBzB,IANiB,SAAC,GAAe,IAAdR,EAAa,EAAbA,QACf,OACI,cAAGiB,UAAU,QAAb,SAAsBjB,GAE7B,C,mDCaD,IAhBe,WACb,OACE,0BACE,SAAC,KAAD,CACEkB,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,aAI5D,C","sources":["Pages/Home.jsx","Services/Api.js","components/ErrorMsg/ErrorMsg.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getMoviesTrends } from '../Services/Api';\nimport  Loader  from '../components/Loader/Loader';\nimport  ErrorMsg  from '../components/ErrorMsg/ErrorMsg';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const dataMovies = await getMoviesTrends();\n        setMovies(dataMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <ErrorMsg message={error} />}\n      <h1>Trending today</h1>\n      {movies !== null &&\n        movies.map(movie => (\n          <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <li>{movie.title}</li>\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default Home","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst MY_KEY = '74e3875ddbdb3d01b8afddc4b578738c';\n\nexport const getMoviesTrends = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${MY_KEY}`);\n  console.log(data.results);\n  return data.results;\n};\n\nexport const findMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie/?api_key=${MY_KEY}&query=${query}`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${MY_KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${MY_KEY}`\n  );\n  return data;\n};\nexport const getMovieReview = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${MY_KEY}`\n  );\n  return data;\n};\n","import React from 'react'\n\nconst ErrorMsg = ({message}) => {\n    return(\n        <p className=\"error\">{message}</p>\n    );\n};\n\nexport default ErrorMsg;","import React from 'react';\nimport { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <Vortex\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n"],"names":["useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","getMoviesTrends","dataMovies","message","map","movie","to","id","title","axios","MY_KEY","data","console","log","results","findMovieByQuery","query","getMovieDetails","movieId","getMovieCast","className","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}