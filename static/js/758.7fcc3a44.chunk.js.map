{"version":3,"file":"static/js/758.7fcc3a44.chunk.js","mappings":"2OAiDA,UA3Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAc,mCAAG,oGAEnBJ,GAAa,GAFM,UAGIK,EAAAA,EAAAA,IAAaX,GAHjB,OAGbY,EAHa,OAInBR,EAAQQ,GAJW,gDAMnBJ,EAAS,KAAMK,SANI,yBAQnBP,GAAa,GARM,4EAAH,qDAWpBI,GAZoB,CAarB,GAAE,CAACV,KAEF,2BACGK,IAAa,SAAC,IAAD,IAAW,IAAEE,IAAS,SAAC,IAAD,CAAUM,QAASN,IAC7C,OAATJ,IACC,wBACGA,EAAKW,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACrC,OACE,2BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,KAEP,wBAAKA,KACL,yBAAG,cAAYC,OANRF,EASZ,QAKV,C","sources":["Pages/Cast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../Services/Api';\nimport Loader from '../components/Loader/Loader';\nimport ErrorMsg from '../components/ErrorMsg/ErrorMsg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const castData = await getMovieCast(movieId);\n        setCast(castData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n  return (\n    <div>\n      {isLoading && <Loader />};{error && <ErrorMsg message={error} />}\n      {cast !== null && (\n        <ul>\n          {cast.map(({ cast_id, name, character, profile_path }) => {\n            return (\n              <li key={cast_id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={name}\n                />\n                <h3>{name}</h3>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchMovieCast","getMovieCast","castData","message","map","cast_id","name","character","profile_path","src","alt"],"sourceRoot":""}