{"version":3,"file":"static/js/740.e72e15fd.chunk.js","mappings":"mPAmEA,UA7De,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAQT,EAAaU,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAW,mCAAG,oGAEhBN,GAAa,GAFG,UAGQO,EAAAA,EAAAA,IAAiBJ,GAHzB,OAGVK,EAHU,OAIhBC,QAAQC,IAAIF,GACZV,EAAUU,GALM,gDAOhBN,EAAS,KAAMS,SAPC,yBAShBX,GAAa,GATG,4EAAH,qDAYjBM,GAbkB,CAcnB,GAAE,CAACH,IASJ,OACE,iCACE,0BACE,iBAAMS,SAVa,SAAAC,GACvBA,EAAIC,iBAEJ,IAAMC,EAAcF,EAAIG,OAAOC,iBAAiBC,MAChDvB,EAAgB,CAAEQ,MAAOY,GAC1B,EAKK,UACE,8BACE,kBAAOI,KAAK,OAAOC,KAAK,mBAAmBC,UAAQ,KACnD,mBAAQF,KAAK,SAAb,SAAsB,mBAI5B,+BACGpB,IAAa,SAAC,IAAD,IACbE,IAAS,SAAC,IAAD,CAAUU,QAASV,IACjB,OAAXJ,GACCA,EAAOyB,KAAI,SAAAC,GAAK,OACd,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAMlC,GACfmC,GAAE,kBAAaH,EAAMI,IAFvB,UAKE,wBAAKJ,EAAMK,SAFNL,EAAMI,GAJC,SAYzB,C,+LC/DDE,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAS,mCAEFC,EAAe,mCAAG,sGACNF,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,uBACrBE,EADqB,EACrBA,KADqB,kBAGtBA,EAAKC,SAHiB,2CAAH,qDAMf1B,EAAgB,mCAAG,WAAMJ,GAAN,yFACP0B,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACmB3B,IAFZ,uBACtB6B,EADsB,EACtBA,KAGRvB,QAAQC,IAAIsB,EAAKC,SAJa,kBAKvBD,EAAKC,SALkB,2CAAH,sDAQhBC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,oBAAsCL,IADhC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,yFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,IAFZ,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,EAAKK,MAJc,2CAAH,sDAMZC,EAAe,mCAAG,WAAMH,GAAN,yFACNN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeL,IAFT,uBACrBE,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,qD,0CCvB5B,IANiB,SAAC,GAAe,IAAdtB,EAAa,EAAbA,QACf,OACI,cAAG4B,UAAU,QAAb,SAAsB5B,GAE7B,C","sources":["Pages/Movies.jsx","Services/Api.js","components/ErrorMsg/ErrorMsg.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { findMovieByQuery } from '../Services/Api';\nimport Loader from '../components/Loader/Loader';\nimport ErrorMsg from '../components/ErrorMsg/ErrorMsg';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const dataMovie = await findMovieByQuery(query);\n        console.log(dataMovie);\n        setMovies(dataMovie);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  const handleFormSubmit = evt => {\n    evt.preventDefault();\n\n    const searchValue = evt.target.searchMovieTitle.value;\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <>\n      <div>\n        <form onSubmit={handleFormSubmit}>\n          <label>\n            <input type=\"text\" name=\"searchMovieTitle\" required />\n            <button type=\"submit\">Search</button>\n          </label>\n        </form>\n      </div>\n      <section>\n        {isLoading && <Loader />}\n        {error && <ErrorMsg message={error} />}\n        {movies !== null &&\n          movies.map(movie => (\n            <Link\n              state={{ from: location }}\n              to={`/movies/${movie.id}`}\n              key={movie.id}\n            >\n              <li>{movie.title}</li>\n            </Link>\n          ))}\n      </section>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst MY_KEY = '74e3875ddbdb3d01b8afddc4b578738c';\n\nexport const getMoviesTrends = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${MY_KEY}`);\n  // console.log(data.results);\n  return data.results;\n};\n\nexport const findMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${MY_KEY}&query=${query}`\n  );\n  console.log(data.results)\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${MY_KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${MY_KEY}`\n  );\n  return data.cast;\n};\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${MY_KEY}`\n  );\n  return data.results;\n};\n","import React from 'react'\n\nconst ErrorMsg = ({message}) => {\n    return(\n        <p className=\"error\">{message}</p>\n    );\n};\n\nexport default ErrorMsg;"],"names":["location","useLocation","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","isLoading","setIsLoading","error","setError","query","get","useEffect","fetchMovies","findMovieByQuery","dataMovie","console","log","message","onSubmit","evt","preventDefault","searchValue","target","searchMovieTitle","value","type","name","required","map","movie","state","from","to","id","title","axios","MY_KEY","getMoviesTrends","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","className"],"sourceRoot":""}